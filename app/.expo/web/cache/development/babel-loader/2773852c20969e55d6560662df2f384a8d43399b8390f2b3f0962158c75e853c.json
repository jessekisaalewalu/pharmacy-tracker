{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\other\\\\PERSONAL PROJECTS\\\\pharmacy-tracker\\\\app\\\\src\\\\screens\\\\MapScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport * as Location from \"expo-location\";\nimport InteractiveCard from \"../components/InteractiveCard\";\nimport { fetchNearest } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MapScreen({\n  navigation\n}) {\n  const [location, setLocation] = useState(null);\n  const [pharmacies, setPharmacies] = useState([]);\n  const [selectedPharmacy, setSelectedPharmacy] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    (async () => {\n      try {\n        let {\n          status\n        } = await Location.requestForegroundPermissionsAsync();\n        if (status !== \"granted\") {\n          Alert.alert(\"Permission Denied\", \"Please enable location services to find nearby pharmacies.\");\n          return;\n        }\n        let currentLocation = await Location.getCurrentPositionAsync({});\n        setLocation(currentLocation.coords);\n        const nearbyPharmacies = await fetchNearest(currentLocation.coords.latitude, currentLocation.coords.longitude);\n        setPharmacies(nearbyPharmacies);\n      } catch (error) {\n        Alert.alert(\"Error\", \"Failed to get location or fetch pharmacies\");\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.loadingContainer,\n      children: _jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: \"#0a84ff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(MapView, {\n      style: styles.map,\n      initialRegion: location ? {\n        latitude: location.latitude,\n        longitude: location.longitude,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421\n      } : null,\n      children: [location && _jsxDEV(Marker, {\n        coordinate: {\n          latitude: location.latitude,\n          longitude: location.longitude\n        },\n        title: \"You are here\",\n        pinColor: \"#0a84ff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), pharmacies.map(pharmacy => _jsxDEV(Marker, {\n        coordinate: {\n          latitude: pharmacy.latitude,\n          longitude: pharmacy.longitude\n        },\n        title: pharmacy.name,\n        onPress: () => setSelectedPharmacy(pharmacy)\n      }, pharmacy.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), selectedPharmacy && _jsxDEV(View, {\n      style: styles.cardContainer,\n      children: _jsxDEV(InteractiveCard, {\n        pharmacy: selectedPharmacy,\n        onPress: () => navigation.navigate(\"PharmacyDetail\", {\n          pharmacy: selectedPharmacy\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  map: {\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  cardContainer: {\n    position: \"absolute\",\n    bottom: 20,\n    left: 0,\n    right: 0\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","Dimensions","ActivityIndicator","Alert","MapView","Marker","Location","InteractiveCard","fetchNearest","jsxDEV","_jsxDEV","MapScreen","navigation","location","setLocation","pharmacies","setPharmacies","selectedPharmacy","setSelectedPharmacy","loading","setLoading","status","requestForegroundPermissionsAsync","alert","currentLocation","getCurrentPositionAsync","coords","nearbyPharmacies","latitude","longitude","error","console","style","styles","loadingContainer","children","size","color","fileName","_jsxFileName","lineNumber","columnNumber","container","map","initialRegion","latitudeDelta","longitudeDelta","coordinate","title","pinColor","pharmacy","name","onPress","id","cardContainer","navigate","create","flex","width","get","height","justifyContent","alignItems","position","bottom","left","right"],"sources":["C:/Users/other/PERSONAL PROJECTS/pharmacy-tracker/app/src/screens/MapScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Dimensions,\r\n  ActivityIndicator,\r\n  Alert,\r\n} from \"react-native\";\r\nimport MapView, { Marker } from \"react-native-maps\";\r\nimport * as Location from \"expo-location\";\r\nimport InteractiveCard from \"../components/InteractiveCard\";\r\nimport { fetchNearest } from \"../api\";\r\n\r\nexport default function MapScreen({ navigation }) {\r\n  const [location, setLocation] = useState(null);\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  const [selectedPharmacy, setSelectedPharmacy] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        let { status } = await Location.requestForegroundPermissionsAsync();\r\n        if (status !== \"granted\") {\r\n          Alert.alert(\r\n            \"Permission Denied\",\r\n            \"Please enable location services to find nearby pharmacies.\"\r\n          );\r\n          return;\r\n        }\r\n\r\n        let currentLocation = await Location.getCurrentPositionAsync({});\r\n        setLocation(currentLocation.coords);\r\n\r\n        // Fetch nearby pharmacies once we have location\r\n        const nearbyPharmacies = await fetchNearest(\r\n          currentLocation.coords.latitude,\r\n          currentLocation.coords.longitude\r\n        );\r\n        setPharmacies(nearbyPharmacies);\r\n      } catch (error) {\r\n        Alert.alert(\"Error\", \"Failed to get location or fetch pharmacies\");\r\n        console.error(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#0a84ff\" />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <MapView\r\n        style={styles.map}\r\n        initialRegion={\r\n          location\r\n            ? {\r\n                latitude: location.latitude,\r\n                longitude: location.longitude,\r\n                latitudeDelta: 0.0922,\r\n                longitudeDelta: 0.0421,\r\n              }\r\n            : null\r\n        }\r\n      >\r\n        {location && (\r\n          <Marker\r\n            coordinate={{\r\n              latitude: location.latitude,\r\n              longitude: location.longitude,\r\n            }}\r\n            title=\"You are here\"\r\n            pinColor=\"#0a84ff\"\r\n          />\r\n        )}\r\n        {pharmacies.map((pharmacy) => (\r\n          <Marker\r\n            key={pharmacy.id}\r\n            coordinate={{\r\n              latitude: pharmacy.latitude,\r\n              longitude: pharmacy.longitude,\r\n            }}\r\n            title={pharmacy.name}\r\n            onPress={() => setSelectedPharmacy(pharmacy)}\r\n          />\r\n        ))}\r\n      </MapView>\r\n      {selectedPharmacy && (\r\n        <View style={styles.cardContainer}>\r\n          <InteractiveCard\r\n            pharmacy={selectedPharmacy}\r\n            onPress={() =>\r\n              navigation.navigate(\"PharmacyDetail\", {\r\n                pharmacy: selectedPharmacy,\r\n              })\r\n            }\r\n          />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  map: {\r\n    width: Dimensions.get(\"window\").width,\r\n    height: Dimensions.get(\"window\").height,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  cardContainer: {\r\n    position: \"absolute\",\r\n    bottom: 20,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}