{"ast":null,"code":"import { codegenNativeComponent } from \"react-native-web/dist/index\";\nexport default codegenNativeComponent('RNMapsGooglePolygon', {});","map":{"version":3,"names":["codegenNativeComponent"],"sources":["C:/Users/other/PERSONAL PROJECTS/pharmacy-tracker/app/node_modules/react-native-maps/src/specs/NativeComponentGooglePolygon.ts"],"sourcesContent":["import type {HostComponent, ViewProps, ColorValue} from 'react-native';\n\nimport {codegenNativeComponent} from 'react-native';\nimport type {\n  Double,\n  BubblingEventHandler,\n  Float,\n  WithDefault,\n} from 'react-native/Libraries/Types/CodegenTypes';\n\nexport type LatLng = Readonly<{\n  latitude: Double; // Non-nullable Double for latitude\n  longitude: Double; // Non-nullable Double for longitude\n}>;\n\nexport type PolygonPressEventHandler = BubblingEventHandler<\n  Readonly<{\n    action?: string;\n    id: string;\n    coordinate: {\n      latitude: Double; // Inlined LatLng\n      longitude: Double;\n    };\n    position?: {\n      x: Double; // Inlined Point\n      y: Double;\n    }; // Optional position for Android\n  }>\n>;\n\nexport interface PolygonFabricNativeProps extends ViewProps {\n  /**\n   * An array of coordinates to describe the polygon\n   *\n   * @platform iOS: Supported\n   * @platform Android: Supported\n   */\n  coordinates: ReadonlyArray<LatLng>;\n  /**\n   * The fill color to use for the path.\n   *\n   * @default `#000`, `rgba(r,g,b,0.5)`\n   * @platform iOS: Supported\n   * @platform Android: Supported\n   */\n\n  fillColor?: ColorValue;\n\n  /**\n   * The stroke color to use for the path.\n   *\n   * @default `#000`, `rgba(r,g,b,0.5)`\n   * @platform iOS: Supported\n   * @platform Android: Supported\n   */\n  strokeColor?: ColorValue;\n\n  /**\n   * The stroke width to use for the path.\n   *\n   * @default 1\n   * @platform iOS: Supported\n   * @platform Android: Supported\n   */\n  strokeWidth?: WithDefault<Float, 1.0>;\n\n  /**\n   * Boolean to indicate whether to draw each segment of the line as a geodesic as opposed to straight lines on the Mercator projection.\n   * A geodesic is the shortest path between two points on the Earth's surface.\n   * The geodesic curve is constructed assuming the Earth is a sphere.\n   *\n   * @platform iOS: Google Maps only\n   * @platform Android: Supported\n   */\n  geodesic?: boolean;\n\n  /**\n   * A 2d array of coordinates to describe holes of the polygon where each hole has at least 3 points.\n   *\n   * @platform iOS: Supported\n   * @platform Android: Supported\n   */\n  holes?: ReadonlyArray<ReadonlyArray<LatLng>>;\n\n  /**\n   * Boolean to allow a polygon to be tappable and use the onPress function.\n   *\n   * @platform iOS: Google Maps only\n   * @platform Android: Supported\n   */\n  tappable?: boolean;\n\n  /**\n   * Callback that is called when user taps on the map.\n   *\n   * @platform iOS: Supported\n   * @platform Android: Supported\n   */\n  onPress?: PolygonPressEventHandler;\n}\n\nexport default codegenNativeComponent<PolygonFabricNativeProps>(\n  'RNMapsGooglePolygon',\n  {},\n) as HostComponent<PolygonFabricNativeProps>;\n"],"mappings":"SAEQA,sBAAsB;AAmG9B,eAAeA,sBAAsB,CACnC,qBAAqB,EACrB,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}