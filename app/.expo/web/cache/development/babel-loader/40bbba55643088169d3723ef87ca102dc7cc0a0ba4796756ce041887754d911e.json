{"ast":null,"code":"import { codegenNativeComponent } from \"react-native-web/dist/index\";\nexport default codegenNativeComponent('RNMapsCircle', {\n  excludedPlatforms: ['iOS']\n});","map":{"version":3,"names":["codegenNativeComponent","excludedPlatforms"],"sources":["C:/Users/other/PERSONAL PROJECTS/pharmacy-tracker/app/node_modules/react-native-maps/src/specs/NativeComponentCircle.ts"],"sourcesContent":["import type {HostComponent, ViewProps, ColorValue} from 'react-native';\n\nimport {codegenNativeComponent} from 'react-native';\nimport type {\n  Double,\n  Float,\n  BubblingEventHandler,\n  WithDefault,\n} from 'react-native/Libraries/Types/CodegenTypes';\n\nexport type LatLng = Readonly<{\n  latitude: Double; // Non-nullable Double for latitude\n  longitude: Double; // Non-nullable Double for longitude\n}>;\n\nexport type CirclePressEventHandler = BubblingEventHandler<\n  Readonly<{\n    action?: string;\n    id: string;\n    coordinate: {\n      latitude: Double; // Inlined LatLng\n      longitude: Double;\n    };\n    position?: {\n      x: Double; // Inlined Point\n      y: Double;\n    }; // Optional position for Android\n  }>\n>;\n\nexport interface CircleFabricNativeProps extends ViewProps {\n  /**\n   * The coordinates of the center of the circle.\n   *\n   * @platform iOS: Supported\n   * @platform Android: Supported\n   */\n  center: LatLng;\n\n  /**\n   * The stroke color to use for the path.\n   *\n   * @default `#000`, `rgba(r,g,b,0.5)`\n   * @platform iOS: Supported\n   * @platform Android: Supported\n   */\n  fillColor?: ColorValue;\n\n  /**\n   * The radius of the circle to be drawn (in meters)\n   *\n   * @platform iOS: Supported\n   * @platform Android: Supported\n   */\n  radius: Double;\n\n  /**\n   * The stroke color to use for the path.\n   *\n   * @default `#000`, `rgba(r,g,b,0.5)`\n   * @platform iOS: Supported\n   * @platform Android: Supported\n   */\n  strokeColor?: ColorValue;\n\n  /**\n   * Callback that is called when user taps on the map.\n   *\n   * @platform iOS: Supported\n   * @platform Android: Supported\n   */\n  onPress?: CirclePressEventHandler;\n\n  /**\n   * The stroke width to use for the path.\n   *\n   * @default 1\n   * @platform iOS: Supported\n   * @platform Android: Supported\n   */\n  strokeWidth?: WithDefault<Float, 1.0>;\n\n  /**\n   * Boolean to allow a polygon to be tappable and use the onPress function.\n   *\n   * @platform iOS: Google Maps only\n   * @platform Android: Supported\n   */\n  tappable?: boolean;\n}\n\nexport default codegenNativeComponent<CircleFabricNativeProps>('RNMapsCircle', {\n  excludedPlatforms: ['iOS'],\n}) as HostComponent<CircleFabricNativeProps>;\n"],"mappings":"SAEQA,sBAAsB;AAyF9B,eAAeA,sBAAsB,CAA0B,cAAc,EAAE;EAC7EC,iBAAiB,EAAE,CAAC,KAAK;AAC3B,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}