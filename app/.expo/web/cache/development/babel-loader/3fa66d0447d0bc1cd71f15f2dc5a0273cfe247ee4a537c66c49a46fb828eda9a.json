{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/other/PERSONAL PROJECTS/pharmacy-tracker/app/node_modules/react-native-maps/src/sharedTypes.ts"],"sourcesContent":["import type {NativeSyntheticEvent} from 'react-native';\n\nexport type Provider = 'google' | undefined;\n\nexport type LatLng = {\n  latitude: number;\n  longitude: number;\n};\n\nexport type Point = {\n  x: number;\n  y: number;\n};\n\nexport type Region = LatLng & {\n  latitudeDelta: number;\n  longitudeDelta: number;\n};\n\nexport type Frame = Point & {height: number; width: number};\n\nexport type CalloutPressEvent = NativeSyntheticEvent<{\n  action: 'callout-press';\n\n  /**\n   * @platform iOS\n   */\n  frame?: Frame;\n\n  /**\n   * @platform iOS\n   */\n  id?: string;\n\n  /**\n   * @platform iOS\n   */\n  point?: Point;\n\n  /**\n   * @platform Android\n   */\n  coordinate?: LatLng;\n\n  /**\n   * @platform Android\n   */\n  position?: Point;\n}>;\n\nexport type LineCapType = 'butt' | 'round' | 'square';\nexport type LineJoinType = 'miter' | 'round' | 'bevel';\n\nexport type ClickEvent<T = {}> = NativeSyntheticEvent<\n  {coordinate: LatLng; position: Point} & T\n>;\n\nexport type MarkerDeselectEvent = Omit<\n  ClickEvent<{\n    action: 'marker-deselect';\n    id: string;\n  }>,\n  'position'\n>;\n\nexport type MarkerSelectEvent = Omit<\n  ClickEvent<{id: string; action: 'marker-select'}>,\n  'position'\n>;\n\nexport type MarkerDragEvent = ClickEvent<{\n  /**\n   * @platform iOS\n   */\n  id?: string;\n}>;\n\nexport type MarkerDragStartEndEvent = NativeSyntheticEvent<{\n  coordinate: LatLng;\n\n  /**\n   * @platform iOS\n   */\n  id?: string;\n\n  /**\n   * @platform Android\n   */\n  position?: Point;\n}>;\n\nexport type MarkerPressEvent = NativeSyntheticEvent<{\n  id: string;\n  action: 'marker-press';\n  coordinate: LatLng;\n\n  /**\n   * @platform Android\n   */\n  position?: Point;\n}>;\n\n/**\n * Represents the available categories for points of interest on the Apple Maps.\n * Use an array of these strings for the `pointsOfInterestFilter` prop.\n * More: https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory\n */\nexport type MKPointOfInterestCategoryType =\n  // Arts and culture\n  | 'museum'\n  | 'musicVenue'\n  | 'theater'\n  // Education\n  | 'library'\n  | 'planetarium'\n  | 'school'\n  | 'university'\n  // Entertainment\n  | 'movieTheater'\n  | 'nightlife'\n  // Health and safety\n  | 'fireStation'\n  | 'hospital'\n  | 'pharmacy'\n  | 'police'\n  // Historical and cultural landmarks\n  | 'castle'\n  | 'fortress'\n  | 'landmark'\n  | 'nationalMonument'\n  // Food and drink\n  | 'bakery'\n  | 'brewery'\n  | 'cafe'\n  | 'distillery'\n  | 'foodMarket'\n  | 'restaurant'\n  | 'winery'\n  // Personal services\n  | 'animalService'\n  | 'atm'\n  | 'automotiveRepair'\n  | 'bank'\n  | 'beauty'\n  | 'evCharger'\n  | 'fitnessCenter'\n  | 'laundry'\n  | 'mailbox'\n  | 'postOffice'\n  | 'restroom'\n  | 'spa'\n  | 'store'\n  // Parks and recreation\n  | 'amusementPark'\n  | 'aquarium'\n  | 'beach'\n  | 'campground'\n  | 'fairground'\n  | 'marina'\n  | 'nationalPark'\n  | 'park'\n  | 'rvPark'\n  | 'zoo'\n  // Sports\n  | 'baseball'\n  | 'basketball'\n  | 'bowling'\n  | 'goKart'\n  | 'golf'\n  | 'hiking'\n  | 'miniGolf'\n  | 'rockClimbing'\n  | 'skatePark'\n  | 'skating'\n  | 'skiing'\n  | 'soccer'\n  | 'stadium'\n  | 'tennis'\n  | 'volleyball'\n  // Travel\n  | 'airport'\n  | 'carRental'\n  | 'conventionCenter'\n  | 'gasStation'\n  | 'hotel'\n  | 'parking'\n  | 'publicTransport'\n  // Water sports\n  | 'fishing'\n  | 'kayaking'\n  | 'surfing'\n  | 'swimming';\n"],"mappings":"","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}