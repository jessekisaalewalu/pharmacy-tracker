{"ast":null,"code":"import { codegenNativeComponent } from \"react-native-web/dist/index\";\nexport default codegenNativeComponent('RNMapsOverlay', {\n  excludedPlatforms: ['iOS']\n});","map":{"version":3,"names":["codegenNativeComponent","excludedPlatforms"],"sources":["C:/Users/other/PERSONAL PROJECTS/pharmacy-tracker/app/node_modules/react-native-maps/src/specs/NativeComponentOverlay.ts"],"sourcesContent":["import {codegenNativeComponent} from 'react-native';\nimport type {\n  Double,\n  Float,\n  BubblingEventHandler,\n  WithDefault,\n} from 'react-native/Libraries/Types/CodegenTypes';\nimport type {\n  ViewProps,\n  HostComponent,\n  ImageSourcePropType as ImageSource,\n} from 'react-native';\nexport type LatLng = Readonly<{\n  latitude: Double; // Non-nullable Double for latitude\n  longitude: Double; // Non-nullable Double for longitude\n}>;\n\nexport type OverlayPressEventHandler = BubblingEventHandler<\n  Readonly<{\n    action?: string;\n    id: string;\n    coordinate: {\n      latitude: Double; // Inlined LatLng\n      longitude: Double;\n    };\n    position?: {\n      x: Double; // Inlined Point\n      y: Double;\n    }; // Optional position for Android\n  }>\n>;\n\nexport interface OverlayFabricNativeProps extends ViewProps {\n  /**\n   * The bearing in degrees clockwise from north. Values outside the range [0, 360) will be normalized.\n   *\n   * @default 0\n   * @platform iOS: Google Maps only\n   * @platform Android: Supported\n   */\n  bearing?: Float;\n\n  /**\n   * The coordinates for the image (left-top corner, right-bottom corner). ie.```[[lat, long], [lat, long]]```\n   *\n   * @platform iOS: Supported\n   * @platform Android: Supported\n   */\n  bounds: Readonly<{\n    northEast: {\n      latitude: Double; // Non-nullable Double for latitude\n      longitude: Double; // Non-nullable Double for longitude\n    };\n    southWest: {\n      latitude: Double; // Non-nullable Double for latitude\n      longitude: Double; // Non-nullable Double for longitude\n    };\n  }>;\n\n  /**\n   * A custom image to be used as the overlay.\n   * Only required local image resources and uri (as for images located in the net) are allowed to be used.\n   *\n   * @platform iOS: Supported\n   * @platform Android: Supported\n   */\n  image?: ImageSource | null;\n\n  /**\n   * Callback that is called when user taps on the map.\n   *\n   * @platform iOS: Supported\n   * @platform Android: Supported\n   */\n  onPress?: OverlayPressEventHandler;\n\n  /**\n   * The overlay's opacity between 0.0 and 1.0.\n   *\n   * @default 1.0\n   * @platform iOS: Supported\n   * @platform Android: Supported\n   */\n  opacity?: WithDefault<Float, 1.0>;\n\n  /**\n   * Boolean to allow a polygon to be tappable and use the onPress function.\n   *\n   * @platform iOS: Google Maps only\n   * @platform Android: Supported\n   */\n  tappable?: boolean;\n}\n\nexport default codegenNativeComponent<OverlayFabricNativeProps>(\n  'RNMapsOverlay',\n  {excludedPlatforms: ['iOS']},\n) as HostComponent<OverlayFabricNativeProps>;\n"],"mappings":"SAAQA,sBAAsB;AA8F9B,eAAeA,sBAAsB,CACnC,eAAe,EACf;EAACC,iBAAiB,EAAE,CAAC,KAAK;AAAC,CAC7B,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}