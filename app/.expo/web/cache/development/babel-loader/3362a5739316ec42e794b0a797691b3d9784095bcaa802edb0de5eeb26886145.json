{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\other\\\\PERSONAL PROJECTS\\\\pharmacy-tracker\\\\app\\\\src\\\\screens\\\\RegisterScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport * as Location from 'expo-location';\nimport { createPharmacy } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterScreen({\n  navigation\n}) {\n  const [name, setName] = useState('');\n  const [contact, setContact] = useState('');\n  const [address, setAddress] = useState('');\n  const [description, setDescription] = useState('');\n  const [latlng, setLatlng] = useState(null);\n  const [busy, setBusy] = useState(false);\n  async function getLocation() {\n    try {\n      const {\n        status\n      } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        Alert.alert('Permission required', 'Location permission is required to set coordinates.');\n        return;\n      }\n      const loc = await Location.getCurrentPositionAsync({\n        accuracy: Location.Accuracy.High\n      });\n      setLatlng({\n        latitude: loc.coords.latitude,\n        longitude: loc.coords.longitude\n      });\n    } catch (e) {\n      Alert.alert('Error', 'Could not get location: ' + e.message);\n    }\n  }\n  async function submit() {\n    if (!name.trim()) return Alert.alert('Validation', 'Please provide a pharmacy name.');\n    setBusy(true);\n    try {\n      const payload = {\n        name: name.trim(),\n        contact: contact.trim(),\n        address: address.trim(),\n        description: description.trim(),\n        latitude: latlng?.latitude ?? null,\n        longitude: latlng?.longitude ?? null\n      };\n      await createPharmacy(payload);\n      Alert.alert('Success', 'Pharmacy registered successfully.');\n      navigation.goBack();\n    } catch (e) {\n      Alert.alert('Error', 'Failed to register: ' + (e.message || JSON.stringify(e)));\n    } finally {\n      setBusy(false);\n    }\n  }\n  return _jsxDEV(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.h,\n      children: \"Register Pharmacy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      value: name,\n      onChangeText: setName,\n      placeholder: \"Name *\",\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      value: contact,\n      onChangeText: setContact,\n      placeholder: \"Contact (phone/email)\",\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      value: address,\n      onChangeText: setAddress,\n      placeholder: \"Address\",\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      value: description,\n      onChangeText: setDescription,\n      placeholder: \"Short description\",\n      style: [styles.input, {\n        height: 90\n      }],\n      multiline: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: {\n        marginTop: 8\n      },\n      children: _jsxDEV(Button, {\n        title: latlng ? `Location set: ${latlng.latitude.toFixed(4)}, ${latlng.longitude.toFixed(4)}` : 'Use my current location',\n        onPress: getLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: {\n        marginTop: 12\n      },\n      children: _jsxDEV(Button, {\n        title: busy ? 'Submitting...' : 'Submit',\n        onPress: submit,\n        disabled: busy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: {\n        height: 40\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    padding: 18,\n    backgroundColor: '#fff',\n    flexGrow: 1\n  },\n  h: {\n    fontSize: 20,\n    fontWeight: '700',\n    marginBottom: 12\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#e6e9ef',\n    borderRadius: 10,\n    padding: 12,\n    marginTop: 10,\n    backgroundColor: '#fbfdff'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","Alert","ScrollView","Location","createPharmacy","jsxDEV","_jsxDEV","RegisterScreen","navigation","name","setName","contact","setContact","address","setAddress","description","setDescription","latlng","setLatlng","busy","setBusy","getLocation","status","requestForegroundPermissionsAsync","alert","loc","getCurrentPositionAsync","accuracy","Accuracy","High","latitude","coords","longitude","e","message","submit","trim","payload","goBack","JSON","stringify","contentContainerStyle","styles","container","children","style","h","fileName","_jsxFileName","lineNumber","columnNumber","value","onChangeText","placeholder","input","height","multiline","marginTop","title","toFixed","onPress","disabled","create","padding","backgroundColor","flexGrow","fontSize","fontWeight","marginBottom","borderWidth","borderColor","borderRadius"],"sources":["C:/Users/other/PERSONAL PROJECTS/pharmacy-tracker/app/src/screens/RegisterScreen.js"],"sourcesContent":["// app/src/screens/RegisterScreen.js\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet, Alert, ScrollView } from 'react-native';\r\nimport * as Location from 'expo-location';\r\nimport { createPharmacy } from '../api';\r\n\r\nexport default function RegisterScreen({ navigation }) {\r\n  const [name, setName] = useState('');\r\n  const [contact, setContact] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [latlng, setLatlng] = useState(null);\r\n  const [busy, setBusy] = useState(false);\r\n\r\n  async function getLocation() {\r\n    try {\r\n      const { status } = await Location.requestForegroundPermissionsAsync();\r\n      if (status !== 'granted') {\r\n        Alert.alert('Permission required', 'Location permission is required to set coordinates.');\r\n        return;\r\n      }\r\n      const loc = await Location.getCurrentPositionAsync({ accuracy: Location.Accuracy.High });\r\n      setLatlng({ latitude: loc.coords.latitude, longitude: loc.coords.longitude });\r\n    } catch (e) {\r\n      Alert.alert('Error', 'Could not get location: ' + e.message);\r\n    }\r\n  }\r\n\r\n  async function submit() {\r\n    if (!name.trim()) return Alert.alert('Validation', 'Please provide a pharmacy name.');\r\n    setBusy(true);\r\n    try {\r\n      const payload = {\r\n        name: name.trim(),\r\n        contact: contact.trim(),\r\n        address: address.trim(),\r\n        description: description.trim(),\r\n        latitude: latlng?.latitude ?? null,\r\n        longitude: latlng?.longitude ?? null\r\n      };\r\n      await createPharmacy(payload);\r\n      Alert.alert('Success', 'Pharmacy registered successfully.');\r\n      navigation.goBack();\r\n    } catch (e) {\r\n      Alert.alert('Error', 'Failed to register: ' + (e.message || JSON.stringify(e)));\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.container}>\r\n      <Text style={styles.h}>Register Pharmacy</Text>\r\n\r\n      <TextInput value={name} onChangeText={setName} placeholder=\"Name *\" style={styles.input} />\r\n      <TextInput value={contact} onChangeText={setContact} placeholder=\"Contact (phone/email)\" style={styles.input} />\r\n      <TextInput value={address} onChangeText={setAddress} placeholder=\"Address\" style={styles.input} />\r\n      <TextInput\r\n        value={description}\r\n        onChangeText={setDescription}\r\n        placeholder=\"Short description\"\r\n        style={[styles.input, { height: 90 }]}\r\n        multiline\r\n      />\r\n\r\n      <View style={{ marginTop: 8 }}>\r\n        <Button title={latlng ? `Location set: ${latlng.latitude.toFixed(4)}, ${latlng.longitude.toFixed(4)}` : 'Use my current location'} onPress={getLocation} />\r\n      </View>\r\n\r\n      <View style={{ marginTop: 12 }}>\r\n        <Button title={busy ? 'Submitting...' : 'Submit'} onPress={submit} disabled={busy} />\r\n      </View>\r\n\r\n      <View style={{ height: 40 }} />\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { padding: 18, backgroundColor: '#fff', flexGrow: 1 },\r\n  h: { fontSize: 20, fontWeight: '700', marginBottom: 12 },\r\n  input: { borderWidth: 1, borderColor: '#e6e9ef', borderRadius: 10, padding: 12, marginTop: 10, backgroundColor: '#fbfdff' }\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}